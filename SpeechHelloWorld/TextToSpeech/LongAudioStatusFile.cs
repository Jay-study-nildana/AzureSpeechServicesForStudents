// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using TextToSpeech;
//
//    var longAudioStatusFile = LongAudioStatusFile.FromJson(jsonString);

namespace TextToSpeech2
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class LongAudioStatusFile
    {
        [JsonProperty("values")]
        public List<Value> Values { get; set; }
    }

    public partial class Value
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("kind")]
        public string Kind { get; set; }

        [JsonProperty("properties")]
        public Properties Properties { get; set; }

        [JsonProperty("createdDateTime")]
        public DateTimeOffset CreatedDateTime { get; set; }

        [JsonProperty("links")]
        public Links Links { get; set; }
    }

    public partial class Links
    {
        [JsonProperty("contentUrl")]
        public Uri ContentUrl { get; set; }
    }

    public partial class Properties
    {
        [JsonProperty("size")]
        public long Size { get; set; }
    }

    public partial class LongAudioStatusFile
    {
        public static LongAudioStatusFile FromJson(string json) => JsonConvert.DeserializeObject<LongAudioStatusFile>(json, TextToSpeech.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this LongAudioStatusFile self) => JsonConvert.SerializeObject(self, TextToSpeech.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
